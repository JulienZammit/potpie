"""add_media_attachments_support

Revision ID: 20250626135047_a7f9c1ec89e2
Revises: 20250310201406_97a740b07a50
Create Date: 2025-06-26 13:50:47.430149

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "20250626135047_a7f9c1ec89e2"
down_revision: Union[str, None] = "20250310201406_97a740b07a50"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_execution_logs_execution_id", table_name="execution_logs")
    op.drop_table("execution_logs")
    op.drop_index("ix_executions_workflow_id", table_name="executions")
    op.drop_table("executions")
    op.drop_table("alembic_version_workflows")
    op.drop_index("ix_workflows_created_by", table_name="workflows")
    op.drop_table("workflows")
    # Add column as nullable first
    op.add_column("messages", sa.Column("has_attachments", sa.Boolean(), nullable=True))
    # Update all existing rows to set has_attachments=False
    op.execute(
        "UPDATE messages SET has_attachments = FALSE WHERE has_attachments IS NULL"
    )
    # Now make the column NOT NULL
    op.alter_column("messages", "has_attachments", nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("messages", "has_attachments")
    op.create_table(
        "workflows",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column("repo_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("branch", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("agent_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("hash", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("task", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("triggers_string", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("is_paused", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="workflows_pkey"),
        sa.UniqueConstraint("hash", name="workflows_hash_key"),
    )
    op.create_index(
        "ix_workflows_created_by", "workflows", ["created_by"], unique=False
    )
    op.create_table(
        "alembic_version_workflows",
        sa.Column(
            "version_num", sa.VARCHAR(length=32), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("version_num", name="alembic_version_workflows_pkc"),
    )
    op.create_table(
        "executions",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("workflow_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("trigger", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="executions_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "ix_executions_workflow_id", "executions", ["workflow_id"], unique=False
    )
    op.create_table(
        "execution_logs",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("execution_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("log", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("status", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["execution_id"],
            ["executions.id"],
            name="execution_logs_execution_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="execution_logs_pkey"),
    )
    op.create_index(
        "ix_execution_logs_execution_id",
        "execution_logs",
        ["execution_id"],
        unique=False,
    )
    # ### end Alembic commands ###
